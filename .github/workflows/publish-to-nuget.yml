

name: "[Manual] - build, update versions (of the nuget and BlazorStatic reference), test template and publish to nuget"

on:
  workflow_dispatch:
    inputs:
      new_version_blazorstatic:
        description: "Enter the new BlazorStatic version"
        required: true
        default: "1.0.0-beta.XX"
      run_nuget_update:
        description: "Run NuGet update"
        required: true
        type: boolean
        default: false

env:
  NUGET_FOLDER: nugetky

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:

      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Update all templates (their .csproj file) with new version
        run: |
          echo "new version of blazorStatic is ${{ github.event.inputs.new_version_blazorstatic }} ${{ github.event.inputs.run_nuget_update }}"
          # Define the list of .csproj files
          csproj_files=(
            "templates/BlazorStaticMinimalBlogTemplate/BlazorStaticMinimalBlog.csproj"
          )

          # Loop through each file and update the version
          for csproj_file in "${csproj_files[@]}"; do
            # Replace the version in the .csproj file
            sed -i "s/<PackageReference Include=\"BlazorStatic\" Version=\"[^\"]*\"/<PackageReference Include=\"BlazorStatic\" Version=\"${{ github.event.inputs.new_version_blazorstatic }}\"/" "$csproj_file"
          done

      - name: Increment version
        id: increment-version
        uses: christian-draeger/increment-semantic-version@1.2.3
        with:
          current-version: $(grep -oP '(?<=<PackageVersion>).*?(?=</PackageVersion>)' ./BlazorStatic.Templates.csproj)
          version-fragment: minor

      - name: Update version in csproj
        run: |
          sed -i "s|<PackageVersion>.*</PackageVersion>|<PackageVersion>${{ steps.increment-version.outputs.next-version }}</PackageVersion>|" ./BlazorStatic.Templates.csproj


      - name: Create nuget BlazorStatic.Templates to destination folder
        run: |
          dotnet pack BlazorStatic.Templates.csproj --output ${{ env.NUGET_FOLDER }}

      # Step: Install package, create project, and build
      - name: Test Template Installation and Build
        run: |
          dotnet new install  ${{ env.NUGET_FOLDER }}/BlazorStatic.Templates.${{ steps.increment-version.outputs.next-version }}.nupkg

          # Create a new project from the template and then try to build it
          dotnet new BlazorStaticMinimalBlog -o TestProject --force

          dotnet build TestProject

      - name: Upload NuGet package artifacts
        if: ${{ github.event.inputs.run_nuget_update == 'true' }}
        uses: actions/upload-artifact@v4
        with:
            name: nuget-packages
            path: ${{ env.NUGET_FOLDER }}/*.nupkg
#
  publish-to-nuget:
    if: ${{ github.event.inputs.run_nuget_update == 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download NuGet package artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
      - run: dotnet nuget push "*.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY_BLAZORSTATIC_TEMPLATES }}
